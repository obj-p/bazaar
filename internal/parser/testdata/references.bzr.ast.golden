&parser.Bazaar{
  Package: &parser.PackageDecl{
    Domain: []string{
      "references",
    },
  },
  Decls: []*parser.TopLevelDecl{
    {
      Function: &parser.FunctionDecl{
        Name: "References",
        Block: []*parser.Stmt{
          {
            Expr: &parser.Expr{
              Unary: &parser.UnaryExpr{
                Primary: &parser.PrimaryExpr{
                  Reference: &parser.ReferenceExpr{
                    Name: &"model",
                    KeyPath: &parser.KeyPathExpr{
                      Optional: true,
                      Subscript: &parser.Expr{
                        Unary: &parser.UnaryExpr{
                          Primary: &parser.PrimaryExpr{
                            Literal: &parser.Literal{
                              Number: &"0",
                            },
                          },
                        },
                      },
                      Next: &parser.KeyPathExpr{
                        Optional: true,
                        Call: &parser.CallExpr{
                          Arguments: []*parser.ArgumentExpr{
                            {
                              Expr: &parser.Expr{
                                Unary: &parser.UnaryExpr{
                                  Primary: &parser.PrimaryExpr{
                                    Literal: &parser.Literal{
                                      String: &parser.String{
                                        Fragments: []*parser.StringFragment{
                                          {
                                            Text: &"hello, world!",
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                            },
                          },
                        },
                        Next: &parser.KeyPathExpr{
                          Optional: true,
                          Reference: &parser.ReferenceExpr{
                            Name: &"foobar",
                          },
                        },
                      },
                    },
                  },
                },
              },
            },
          },
        },
      },
    },
  },
}
