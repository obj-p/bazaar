&parser.Bazaar{
  Package: &parser.PackageDecl{
    Domain: []string{
      "calls",
    },
  },
  Decls: []*parser.TopLevelDecl{
    {
      Function: &parser.FunctionDecl{
        Name: "Calls",
        Block: []*parser.Stmt{
          {
            Call: &parser.CallStmt{
              Name: &"Print",
              Arguments: []*parser.ArgumentExpr{
                {
                  Expr: &parser.Expr{
                    Unary: &parser.UnaryExpr{
                      Primary: &parser.PrimaryExpr{
                        Literal: &parser.Literal{
                          String: &parser.String{
                            Fragments: []*parser.StringFragment{
                              {
                                Text: &"Hello, world!",
                              },
                            },
                          },
                        },
                      },
                    },
                  },
                },
              },
            },
          },
          {
            Call: &parser.CallStmt{
              Name: &"BlockLiteral",
              Arguments: []*parser.ArgumentExpr{
                {
                  Expr: &parser.Expr{
                    Unary: &parser.UnaryExpr{
                      Primary: &parser.PrimaryExpr{
                        Lambda: &parser.LambdaExpr{
                        },
                      },
                    },
                  },
                },
              },
            },
          },
          {
            Call: &parser.CallStmt{
              Name: &"NamedArgs",
              Arguments: []*parser.ArgumentExpr{
                {
                  Name: &"first",
                  Expr: &parser.Expr{
                    Unary: &parser.UnaryExpr{
                      Primary: &parser.PrimaryExpr{
                        Literal: &parser.Literal{
                          Number: &"1337",
                        },
                      },
                    },
                  },
                },
                {
                  Name: &"second",
                  Expr: &parser.Expr{
                    Unary: &parser.UnaryExpr{
                      Primary: &parser.PrimaryExpr{
                        Literal: &parser.Literal{
                          String: &parser.String{
                            Fragments: []*parser.StringFragment{
                              {
                                Text: &"second",
                              },
                            },
                          },
                        },
                      },
                    },
                  },
                },
              },
            },
          },
          {
            Call: &parser.CallStmt{
              Name: &"TrailingBlockLiteral",
              LambdaOnly: &parser.LambdaExpr{
              },
            },
          },
        },
      },
    },
  },
}
